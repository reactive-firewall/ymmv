#! /bin/bash
#-----------------------------------------------------------#
# PreferenceReset.bash                                      #
#-----------------------------------------------------------#

echo "========== Orders Received =========="

#-----------------------------------------------------------#
# Variables                                                 #
#-----------------------------------------------------------#

DEFAULT_SAVE_LOCATION="~/Documents"
#MUSIC_LIBRARY_LOCATION="/Volumes/Music Drive/Music/Media/"
MUSIC_LIBRARY_LOCATION="/Users/sam/Music/Music/"

ZERO_UUID="00000000-0000-0000-0000-000000000000"

CURRENT_DATE_TIME=$(date -j "+%Y-%m-%d %H:%M:00 +0800")
CURRENT_SECONDS=$(date -j "+%s")

MAX_DOWNLOAD_CONNECTIONS=3

TOKEN_ID=$(defaults read com.apple.findmy.fmfcore.notbackedup publicAPSToken)

#-----------------------------------------------------------#
# For AccountOrdering, MailSections, MailVisibleSections,   #
# "NSOutlineView Items Main Window Mailbox List-V2", and    #
# SignatureSelectionMethods in com.apple.mail (some UUIDs   #
# only appear once, not all UUIDs are given their own       #
# variable, so check these sections in com.apple.mail for   #
# proper value)                                             #
#-----------------------------------------------------------#
#-----------------------------------------------------------#
# All other UUIDs only appear once,                         #
# you will need to change these manually.                   #
#-----------------------------------------------------------#

DEFAULTS=$(command -v defaults)
WRITE="${DEFAULTS} write"
DELETE="${DEFAULTS} delete"
MKDIR="$(command -v mkdir) -m 755"
PPDOM="com.apple"
GPDOM="com.google"

#-----------------------------------------------------------#
# To Be Deleted                                             #
#-----------------------------------------------------------#

$DELETE ${PPDOM}.AppleMediaServices 2>/dev/null || true

$DELETE ${PPDOM}.DiskUtility 2>/dev/null || true

$DELETE ${PPDOM}.EmojiCache 2>/dev/null || true

$DELETE ${PPDOM}.UIKit 2>/dev/null || true

$DELETE ${PPDOM}.avfoundation.frecents 2>/dev/null || true

$DELETE ${PPDOM}.audio.AudioMIDISetup 2>/dev/null || true

$DELETE ${PPDOM}.bookstoreagent 2>/dev/null || true

#$DELETE ${PPDOM}.proactive.PersonalizationPortrait 2>/dev/null || true

#$DELETE ${PPDOM}.registration 2>/dev/null || true

$DELETE ${PPDOM}.stockholm 2>/dev/null || true

$DELETE ${PPDOM}.stocks 2>/dev/null || true

$DELETE ${PPDOM}.stocks.account 2>/dev/null || true

$DELETE ${PPDOM}.macos.classroom 2>/dev/null || true

$DELETE ${PPDOM}.garageband10 2>/dev/null || true

$DELETE ${PPDOM}.Messages 2>/dev/null || true

$DELETE ${PPDOM}.imessage 2>/dev/null || true

$DELETE ${PPDOM}.EmojiPreferences 2>/dev/null || true

$DELETE ${PPDOM}.PTPCamera 2>/dev/null || true

$DELETE ${PPDOM}.Preview.ImageSizingPresets 2>/dev/null || true

$DELETE ${PPDOM}.Preview.ViewState 2>/dev/null || true

#-----------------------------------------------------------#
# Deletion Probation                                        #
#-----------------------------------------------------------#

$DELETE org.gpgtools.gpgmail 2>/dev/null || true

$DELETE com.apple.imservice.ids.iMessage 2>/dev/null || true

$DELETE ${PPDOM}.MobileDeviceCrashCopy 2>/dev/null || true

#-----------------------------------------------------------#
# AppStore                                                  #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.AppStore UserSetAutoPlayVideoSetting -bool NO

$WRITE ${PPDOM}.AppStore AutoPlayVideoSetting -string off

$WRITE ${PPDOM}.AppStore lastBootstrapTimeZone -string "America/Los_Angeles"

$WRITE ${PPDOM}.AppStore NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

$WRITE ${PPDOM}.AppStore NSQuitAlwaysKeepsWindows -bool NO

$WRITE ${PPDOM}.AppStore ShowDebugMenu -bool NO

$WRITE ${PPDOM}.AppStore WebKitDeveloperExtras -bool NO

$WRITE ${PPDOM}.AppStore mostRecentTabIdentifier -string updates

$WRITE ${PPDOM}.AppStore lastBootstrapDate -float "${CURRENT_SECONDS}"

$DELETE ${PPDOM}.AppStore "MetricsSamplingLotteryWindowStart_pageRender" 2>/dev/null || true

#-----------------------------------------------------------#
# appstore                                                  #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.appstore UserSetAutoPlayVideoSetting -bool NO

$WRITE ${PPDOM}.appstore AutoPlayVideoSetting -string off

$WRITE ${PPDOM}.appstore lastBootstrapTimeZone -string "America/Los_Angeles"

$WRITE ${PPDOM}.appstore NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

$WRITE ${PPDOM}.appstore NSQuitAlwaysKeepsWindows -bool NO

$WRITE ${PPDOM}.appstore ShowDebugMenu -bool NO

$WRITE ${PPDOM}.appstore WebKitDeveloperExtras -bool NO

$WRITE ${PPDOM}.appstore mostRecentTabIdentifier -string updates

$WRITE ${PPDOM}.appstore lastBootstrapDate -float "${CURRENT_SECONDS}"

$DELETE ${PPDOM}.appstore "MetricsSamplingLotteryWindowStart_pageRender" 2>/dev/null || true

#-----------------------------------------------------------#
# SoftwareUpdate                                            #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.SoftwareUpdate AutomaticCheckEnabled -bool YES

$WRITE ${PPDOM}.SoftwareUpdate CriticalUpdateInstall -bool YES

softwareupdate --list 2>/dev/null || true

#-----------------------------------------------------------#
# Finder                                                    #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.finder CopyProgressWindowLocation -string "{127, 127}"

$WRITE ${PPDOM}.finder EmptyTrashProgressWindowLocation -string "{256, 256}"

$WRITE ${PPDOM}.finder FXEnableExtensionChangeWarning -bool YES

$WRITE ${PPDOM}.finder FXICloudDriveDeclinedUpgrade -bool NO

$WRITE ${PPDOM}.finder FXICloudDriveDesktop -bool NO

$WRITE ${PPDOM}.finder FXICloudDriveDocuments -bool NO

$WRITE ${PPDOM}.finder FXICloudDriveEnabled -bool NO

$WRITE ${PPDOM}.finder FXICloudDriveFirstSyncDownComplete -bool NO

$WRITE ${PPDOM}.finder FXICloudLoggedIn -bool YES

$WRITE ${PPDOM}.finder FXInfoPanesExpanded -dict Comments 1 General 1 MetaData 1 Name 0 OpenWith 1 Preview 1 Privileges 1

$DELETE ${PPDOM}.finder FXRecentFolders 2>/dev/null || true

$DELETE ${PPDOM}.finder RecentMoveAndCopyDestinations 2>/dev/null || true

#-----------------------------------------------------------#
# AdLib                                                     #
#-----------------------------------------------------------#

$DELETE ${PPDOM}.AdLib 2>/dev/null || true

$WRITE ${PPDOM}.AdLib forceLimitAdTracking -bool YES

#-----------------------------------------------------------#
# Photos                                                    #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Photos IPXDefaultAutoplayVideos -bool NO

$WRITE ${PPDOM}.Photos IPXDefaultHasChosenToEnableiCloudPhotosInGettingStarted -bool NO

$WRITE ${PPDOM}.Photos NSNavLastRootDirectory -string "~/Pictures"

#-----------------------------------------------------------#
# photos.shareddefaults                                     #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.photos.shareddefaults iCloudPhotoLibraryHasBeenEnabledAccountIdentifiers -array "${CLOUD_UUID}"

#$WRITE ${PPDOM}.photos.shareddefaults lastHighlightTitlesUpdateDate -date DATE

#-----------------------------------------------------------#
# Address Book/Contacts                                     #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.AddressBook ABBirthDayVisible -bool YES


$WRITE ${PPDOM}.AddressBook ABInitialLabelsAddress -array $'"_$!<Work>!$_"'

$WRITE ${PPDOM}.AddressBook ABInitialLabelsEmail -array $'"_$!<Personal>!$_"' $'"_$!<Work>!$_"'

$WRITE ${PPDOM}.AddressBook ABInitialLabelsPhone -array $'"_$!<Home>!$_"'

$WRITE ${PPDOM}.AddressBook ABInitialLabelsRelatedRecords -array $'"_$!<Spouse>!$_"'

$WRITE ${PPDOM}.AddressBook ABInitialLabelsURLs -array $'"_$!<HomePage>!$_"'

$WRITE ${PPDOM}.AddressBook ABInstantMessagesVisible -bool NO

$WRITE ${PPDOM}.AddressBook ABJobTitleVisible -bool YES

$WRITE ${PPDOM}.AddressBook ABNicknameVisible -bool YES

$WRITE ${PPDOM}.AddressBook ABRelatedRecordsVisible -bool YES

$DELETE ${PPDOM}.AddressBook ABSocialProfilesVisible 2>/dev/null || true

#-----------------------------------------------------------#
# Mail                                                      #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.mail AccountOrdering -array "local://${EMAIL_ID_ONE}/" "imap://${EMAIL_ID_TWO}/" "imap://${EMAIL_ID_THREE}/" "imap://${EMAIL_ID_FOUR}/"

$WRITE ${PPDOM}.mail AddressesIncludeNameOnPasteboard -bool NO

$WRITE ${PPDOM}.mail AttachmentMIMESnipUpgradeState -int 4

$WRITE ${PPDOM}.mail AutoReplyFormat -bool YES

$WRITE ${PPDOM}.mail AutoSelectFont -bool NO

$WRITE ${PPDOM}.mail BccSelf -bool NO

$WRITE ${PPDOM}.mail CheckedForOldLSMMapFile -bool YES

$WRITE ${PPDOM}.mail ConversationViewMarkAllAsRead -bool YES

$WRITE ${PPDOM}.mail ConversationViewSortDescending -bool YES

$WRITE ${PPDOM}.mail DefaultViewerState -dict FavoritesBarVisible 1 FormatVersion 1 SearchPopupTag 4 SelectedMailboxes '(Inbox)' ToolbarIsHidden 0

$WRITE ${PPDOM}.mail DefaultWindowState -dict dictionaryRepresentation '{ FavoritesBarVisible = 1 ;  FormatVersion = 1 ; SearchPopupTag = 4 ; SelectedMailboxes = (Inbox) ; ToolbarIsHidden = 0 ; }' windowFrame "216 199 1008 630 0 0 1440 877 "

$WRITE ${PPDOM}.mail DeleteAttachmentsAfterHours -bool NO

$WRITE ${PPDOM}.mail DisableInlineAttachmentViewing -bool YES

$WRITE ${PPDOM}.mail DisableReplyAnimations -bool YES

$WRITE ${PPDOM}.mail DisableSendAnimations -bool YES

$WRITE ${PPDOM}.mail DraftsViewerAttributes -dict DisplayInThreadedMode yes SortOrder "received-date" SortedDescending yes

$WRITE ${PPDOM}.mail FavoriteMailboxFlaggedAutomaticallyAdded -bool YES

$WRITE ${PPDOM}.mail Favorites -array '{ IsPrefferedSelection = 0 ;  MailboxUidIsContainer = 1 ; MailboxUidName = Inbox ; MailboxUidPersistentIdentifier = Inbox ; MailboxUidType = 100; }' '{ IsPrefferedSelection = 0 ;  MailboxUidIsContainer = 1 ; MailboxUidName = Sent ; MailboxUidPersistentIdentifier = "Sent Messages" ; MailboxUidType = 102; }' '{ IsPrefferedSelection = 0 ;  MailboxUidIsContainer = 1 ; MailboxUidName = Flagged ; MailboxUidPersistentIdentifier = Flags ; MailboxUidType = 108; }'

$WRITE ${PPDOM}.mail FavoritesVersion -int 2

$WRITE ${PPDOM}.mail FlagColorToDisplay -int 1

$WRITE ${PPDOM}.mail FlagNames -dict 0 Quarantine 1 Promiscuous 2 Flagged 3 Trusted 4 Confidential 5 Archive 6 Spam

$WRITE ${PPDOM}.mail FlagsViewerAttributes -dict DisplayInThreadedMode YES FilterEnabled NO MailboxViewingState '{ ScrollPositionType = 0 ; }' SelectedFilters '( { FilterIdentifier = Unread ; } )' SortOrder "received-date" SortedDescending YES

$WRITE ${PPDOM}.mail HasSetupIndexingDefaults -bool YES

$WRITE ${PPDOM}.mail IMAPServerPrefixesMirrorFilesystem -bool YES

$WRITE ${PPDOM}.mail InboxViewerAttributes -dict DisplayInThreadedMode YES FilterEnabled NO MailboxViewingState '{ ScrollPositionType = 0 ; ThreadIdentifiers = (17874) ; }' SelectedFilters '( { FilterIdentifier = Unread ; } )' SortOrder "received-date" SortedDescending YES

$WRITE ${PPDOM}.mail IndexTrash -bool YES

$WRITE ${PPDOM}.mail JunkViewerAttributes -dict DisplayInThreadedMode YES FilterEnabled NO MailboxViewingState '{}' SelectedFilters '( { FilterIdentifier = Unread ; } )' SortOrder "received-date" SortedDescending YES

#$WRITE ${PPDOM}.mail LastMessageTracingDate -date "2020-09-26 20:45:23 +0000"

$WRITE ${PPDOM}.mail LibraryCompressionUpgradeState -int 1

$WRITE ${PPDOM}.mail "MSAssetDownloadRetryInterval.com.apple.mailsupport.downloadMobileAssetCatalog" -int 7200

$WRITE ${PPDOM}.mail MailSections -array MailboxesSection SmartMailboxesSection "local://${EMAIL_ID_ONE}/" "imap://${EMAIL_ID_TWO}/" "imap://${EMAIL_ID_THREE}/" "imap://${EMAIL_ID_FOUR}/"

$WRITE ${PPDOM}.mail MailShowFlags -bool YES

$WRITE ${PPDOM}.mail MailUpgraderPrePersistenceVersion -int 21

$WRITE ${PPDOM}.mail MailUpgraderVersion -int 27

$WRITE ${PPDOM}.mail MailUserNotificationScope -int 5

$WRITE ${PPDOM}.mail MailVisibleFlagsMailboxes -array "smartmailbox://flag-0"

$WRITE ${PPDOM}.mail MailVisibleSections -array MailboxesSection SmartMailboxesSection "imap://${EMAIL_ID_THREE}/" "imap://${EMAIL_ID_FOUR}/"

$WRITE ${PPDOM}.mail MessageListNextMessageDirection -int 0

$WRITE ${PPDOM}.mail NSColorPanelMode -string 1

$WRITE ${PPDOM}.mail NSColorPickerPreferredRGBEntryMode -int 2

$WRITE ${PPDOM}.mail NSColorPickerSlidersDefaults -string 1

$WRITE ${PPDOM}.mail NSFixedPitchFont -string "Menlo-Regular"

$WRITE ${PPDOM}.mail NSFixedPitchFontSize -string 12

$WRITE ${PPDOM}.mail NSFont -string Helvetica

$WRITE ${PPDOM}.mail NSFontSize -string 12

$WRITE ${PPDOM}.mail "NSOutlineView Items Main Window Mailbox List-V2" -array "imap://${EMAIL_ID_FOUR}/" Inbox MailboxesSection "imap://${EMAIL_ID_THREE}/"

$WRITE ${PPDOM}.mail "NSSplitView Subview Frames Main Window" -array "0.000000, 0.000000, 200.000000, 630.000000, NO, NO" "201.000000, 0.000000, 807.000000, 630.000000, NO, NO"

$WRITE ${PPDOM}.mail "NSSplitView Subview Frames Main Window Preview Pane Vertical" -array "0.000000, 0.000000, 400.000000, 630.000000, NO, NO" "401.000000, 0.000000, 406.000000, 630.000000, NO, NO"

$WRITE ${PPDOM}.mail "NSSplitView Subview Frames NSColorPanelSplitView" -array "0.000000, 0.000000, 224.000000, 258.000000, NO, NO" "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"

$WRITE ${PPDOM}.mail "NSToolbar Configuration ComposeWindow_NewMessage" -dict "TB Display Mode" 2

$WRITE ${PPDOM}.mail "NSToolbar Configuration ComposeWindow_ReplyOrForward" -dict "TB Display Mode" 2

$WRITE ${PPDOM}.mail "NSToolbar Configuration MainWindow" -dict "TB Default Item Identifiers" '("checkNewMail:", "showComposeWindow:", NSToolbarSpaceItem, NSToolbarFlexibleSpaceItem, "archiveMessages:", "delete_junk", "reply_replyAll_forward", FlaggedStatus, "muteFromToolbar:", "moveMessagesFromToolbar:", NSToolbarFlexibleSpaceItem, Search)' "TB Display Mode" 1 "TB Icon Size Mode" 1 "TB Is Shown" 1 "TB Item Identifiers" '("checkNewMail:", "showComposeWindow:", "disconnectAllAccounts:", NSToolbarSpaceItem, "toggleAllHeaders:", NSToolbarFlexibleSpaceItem, "archiveMessages:", "delete_junk", "reply_replyAll_forward", FlaggedStatus, "muteFromToolbar:", "moveMessagesFromToolbar:", "addSenderToContacts:", NSToolbarFlexibleSpaceItem, Search)' "TB Size Mode" 1

$WRITE ${PPDOM}.mail "NSToolbar Configuration SingleMessageViewer" -dict "TB Display Mode" 2

$WRITE ${PPDOM}.mail "NSToolbar Configuration com.apple.NSColorPanel" -dict "TB Is Shown" 1

$WRITE ${PPDOM}.mail "NSWindow Frame ActivityViewer" -string "12 715 300 162 0 0 1440 877 "

$WRITE ${PPDOM}.mail NewMessagesSoundName -string "New Mail"

$WRITE ${PPDOM}.mail NumberOfSnippetLines -int 0

$WRITE ${PPDOM}.mail PollTime -int "-1"

$WRITE ${PPDOM}.mail ReplyToSelf -bool NO

$WRITE ${PPDOM}.mail SelectedPreferencesTabIndexKey -int 0

$WRITE ${PPDOM}.mail SendFormat -string MIME

$WRITE ${PPDOM}.mail ShouldShowUnreadMessagesInBold -bool YES

$WRITE ${PPDOM}.mail ShowActivity -bool YES


$WRITE ${PPDOM}.mail SignaturesSelected -dict

$WRITE ${PPDOM}.mail SpellCheckingBehavior -string InlineSpellCheckingEnabled

$WRITE ${PPDOM}.mail SuppressDeliveryFailure -bool YES

$WRITE ${PPDOM}.mail ThreadBackgroundColor -int 2643958

$WRITE ${PPDOM}.mail TrashViewerAttributes -dict DisplayInThreadedMode YES FilterEnabled NO MailboxViewingState '{}' SelectedFilters '( { FilterIdentifier = Unread ; } )' SortOrder "received-date" SortedDescending YES

$WRITE ${PPDOM}.mail "com.apple.email.searchableIndex.scheduler.com.apple.mail.contentIndex" -float 300

$WRITE ${PPDOM}.mail "com.apple.mail.searchableIndex.lastProcessedAttachmentIDKey" -int 5477

$WRITE ${PPDOM}.mail junkMailEvaluationAfterRules -bool NO

#-----------------------------------------------------------#
# Mail-Shared                                               #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.mail-shared AddressDisplayMode -int 0

$WRITE ${PPDOM}.mail-shared DisableURLLoading -bool YES

#-----------------------------------------------------------#
# org.gpgtools.gpgmail                                      #
#-----------------------------------------------------------#

#$WRITE org.gpgtools.gpgmail "savedReport-username" -string "${USER}"

#-----------------------------------------------------------#
# Calendar                                                  #
#-----------------------------------------------------------#


#-----------------------------------------------------------#
# iCal                                                      #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.iCal AccountDisplayOrder -array Birthday Local "${CAL_UUID}"

$WRITE ${PPDOM}.iCal AllDayAreaHeight -float 62

$WRITE ${PPDOM}.iCal BirthdayEventsGenerationLastLocale -string "$LANG"


$WRITE ${PPDOM}.iCal CalDefaultCalendarSelectedByUser -bool NO

#$WRITE ${PPDOM}.iCal CalDefaultPrincipal -string "${CAL_UUID}"

$WRITE ${PPDOM}.iCal CalendarSidebarShown -bool YES

$WRITE ${PPDOM}.iCal CalendarSidebarWidth -float 165

#$WRITE ${PPDOM}.iCal CollapsedTopLevelNodes -dict MainWindow ()

#$WRITE ${PPDOM}.iCal DelegatesInSeparateWindows -dict iCal {}

#$WRITE ${PPDOM}.iCal NSEventConcurrentProcessingEnabled -string YES

#$WRITE ${PPDOM}.iCal "NSWindow Frame iCal" -string "30 124 1380 740 0 0 1440 877 "

$WRITE ${PPDOM}.iCal OpenEventsInWindowType -bool YES

$WRITE ${PPDOM}.iCal "TimeZone support enabled" -bool YES

$WRITE ${PPDOM}.iCal "display birthdays calendar" -bool YES

$WRITE ${PPDOM}.iCal "last calendar view description" -string "7-day"

$WRITE ${PPDOM}.iCal "first minute of day time range" -int 0

$WRITE ${PPDOM}.iCal "first minute of work hours" -int 360

$WRITE ${PPDOM}.iCal "last minute of day time range" -int 1440

$WRITE ${PPDOM}.iCal "last minute of work hours" -int 1320

$WRITE ${PPDOM}.iCal lastViewsTimeZone -string "${TZ}"

$WRITE ${PPDOM}.iCal "number of hours displayed" -int 18

#-----------------------------------------------------------#
# iChat                                                     #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.iChat NotifyAboutMessagesFromUnknownContacts -bool YES 

#-----------------------------------------------------------#
# iChat.inputLine                                           #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.iChat.inputLine inputLineSettingsKey -dict automaticDashSubstitutionEnabled 0 automaticDataDetectionEnabled 0 automaticEmojiSubstitutionEnabled 1 automaticLinkDetectionEnabled 0 automaticQuoteSubstitutionEnabled 0 automaticSpellingCorrectionEnabled 0 automaticTextReplacementEnabled 1 continuousSpellCheckingEnabled 1 grammarCheckingEnabled 0 smartInsertDeleteEnabled 1

#-----------------------------------------------------------#
# Notes                                                     #
#-----------------------------------------------------------#

$DELETE ${PPDOM}.Notes DidChooseToMigrateLocalAccount 2>/dev/null || true

$WRITE ${PPDOM}.Notes ICNoteAddPasswordFirstTimeMessageCompletedKey -bool YES

$WRITE ${PPDOM}.Notes ICFixUnappliedEncryptedRecordsLaunchTask -bool YES

$WRITE ${PPDOM}.Notes hasShownWelcomeScreen -bool YES

#-----------------------------------------------------------#
# TextEdit                                                  #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.TextEdit NSFont -string "Georgia-Bold"

$WRITE ${PPDOM}.TextEdit NSFontSize -int 10

$DELETE ${PPDOM}.TextEdit organization 2>/dev/null || true

$WRITE ${PPDOM}.TextEdit author -string "${AUTHOR_NAME}"

$WRITE ${PPDOM}.TextEdit copyright \\U00a9\ All\ Rights\ Reserved

$WRITE ${PPDOM}.TextEdit NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

$WRITE ${PPDOM}.TextEdit NSQuitAlwaysKeepsWindows -bool YES

#-----------------------------------------------------------#
# Music                                                     #
#-----------------------------------------------------------#


$WRITE ${PPDOM}.Music encoderName -string "AAC Encoder"

$WRITE ${PPDOM}.Music userMaxConcurrentDownloads -int "${MAX_DOWNLOAD_CONNECTIONS}"

$WRITE ${PPDOM}.Music "Store Apple ID" -string "${CLOUD_EMAIL}"

$WRITE ${PPDOM}.Music "Store DSID" -int ${CLOUD_ID}

#-----------------------------------------------------------#
# Music - iTunes                                            #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.itunes MacBuddyStoreID -string "${CLOUD_EMAIL}"

$WRITE ${PPDOM}.itunes "NSNavLastCurrentDirectory:ChooseFile:0" -string "${MUSIC_LIBRARY_LOCATION}"

$WRITE ${PPDOM}.itunes "NSNavLastCurrentDirectory:ChooseFolder:0" -string "${MUSIC_LIBRARY_LOCATION}/Media"

$WRITE ${PPDOM}.itunes "NSNavLastCurrentDirectory:ChooseObject:0" -string "${MUSIC_LIBRARY_LOCATION}/Media"

$WRITE ${PPDOM}.itunes "NSNavLastCurrentDirectory:PutFile:0" -string "~/Public/Music"

$WRITE ${PPDOM}.itunes NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

$WRITE ${PPDOM}.itunes NSQuitAlwaysKeepsWindows -bool NO

$WRITE ${PPDOM}.itunes "Store Apple ID" -string "${CLOUD_EMAIL}"

$WRITE ${PPDOM}.itunes "Store DSID" -int ${CLOUD_ID}


$WRITE ${PPDOM}.itunes WebContinuousSpellCheckingEnabled -bool NO

$WRITE ${PPDOM}.itunes WebKitFullScreenEnabled -bool NO

$WRITE ${PPDOM}.itunes "com.apple.iTunes.WebKit2AsynchronousSpellCheckingEnabled" -bool NO

$WRITE ${PPDOM}.itunes "com.apple.iTunes.WebKit2FullScreenEnabled" -bool NO

$WRITE ${PPDOM}.itunes disableArtistConnect -bool YES

$WRITE ${PPDOM}.itunes disableMusicSocial -bool YES

$WRITE ${PPDOM}.itunes disableMusicStore -bool NO

$WRITE ${PPDOM}.itunes disablePing -bool YES

$WRITE ${PPDOM}.itunes disablePodcasts -bool NO

$WRITE ${PPDOM}.itunes disableRadio -bool NO

$WRITE ${PPDOM}.itunes disableShareLibraryInfo -bool NO

$WRITE ${PPDOM}.itunes disableSharedMusic -bool NO

$WRITE ${PPDOM}.itunes dontAutomaticallySyncIPods -bool YES

$WRITE ${PPDOM}.itunes isAccountAdmin -bool NO

$WRITE ${PPDOM}.itunes "license-agreements" -dict EA0676 1 EA0708 1 EA0733 1 EA0773 1 EA0814 1 EA0815 1 EA0961 1 EA1067 1 EA1510 1

$WRITE ${PPDOM}.itunes recentSearchHints -array


$WRITE ${PPDOM}.itunes restrictExplicit -bool YES

$WRITE ${PPDOM}.itunes restrictExplicitBooks -bool YES

$WRITE ${PPDOM}.itunes restrictGames -bool YES

$WRITE ${PPDOM}.itunes restrictMovies -bool YES

$WRITE ${PPDOM}.itunes restrictTVShows -bool YES

#-----------------------------------------------------------#
# Amp.MediaSharingd                                         #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.amp.mediasharingd "home-sharing-settings" -dict "home-sharing-update-play-counts" 1 "home-sharing-user-id" ${CLOUD_ID} "home-sharing-user-name" "${CLOUD_UN}"

$WRITE ${PPDOM}.amp.mediasharingd "photo-sharing-enabled" -bool NO

$WRITE ${PPDOM}.amp.mediasharingd "photo-sharing-settings" -dict apertureAlbums '()' apertureCopyOriginalPhotos 0 apertureCustomAlbumOrder 0 apertureSyncAllAlbums 0 apertureSyncAllFaces 0 apertureSyncMode 0 apertureSyncPhotoVideos 0 iPhotoAlbums '()' iPhotoCopyOriginalPhotos 0 iPhotoCustomAlbumOrder 0 iPhotoPrefsMajorVersion 0 iPhotoPrefsMinorVersion 0 iPhotoSyncAllAlbums 0 iPhotoSyncAllFaces 0 iPhotoSyncMode 0 iPhotoSyncPhotoVideos 0 iPhotoUpgradedDistinguishedAlbums 0 "photo-sharing-source-id" 0 photosAppAlbums '()' photosAppAutoIncludeEnabled 0 photosAppCopyOriginalPhotos 0 photosAppCustomAlbumOrder 0 photosAppEventCount 255 photosAppOnlyFavorites 0 photosAppSyncAllAlbums 0 photosAppSyncAllFaces 0 photosAppSyncMode 0 photosAppSyncPhotoVideos 0 photosFolderAlbums '()' photosFolderCopyOriginalPhotos 0 photosFolderCustomAlbumOrder 0 photosFolderInfo '{ syncFolderIsFromMac = 0; syncFolderIsValid = 0; }' photosFolderSyncMode 0 photosFolderSyncPhotoVideos 0 psAlbumAlbums '()' psAlbumCopyOriginalPhotos 0 psAlbumCustomAlbumOrder 0 psAlbumSyncMode 0 psAlbumSyncPhotoVideos 0 psElementsAlbums '()' psElementsCopyOriginalPhotos 0 psElementsCustomAlbumOrder 0 psElementsSyncMode 0 psElementsSyncPhotoVideos 0

$WRITE ${PPDOM}.amp.mediasharingd "public-sharing-enabled" -bool NO

$WRITE ${PPDOM}.amp.mediasharingd "public-sharing-settings" -dict "public-sharing-share-all-playlists" 0


#-----------------------------------------------------------#
# TV                                                        #
#-----------------------------------------------------------#


$WRITE ${PPDOM}.TV preloadFilesIntoMemory -bool NO

#Consider disabling if unstable
$WRITE ${PPDOM}.TV NSApplicationCrashOnExceptions -bool YES

$WRITE ${PPDOM}.TV userMaxConcurrentDownloads -int "${MAX_DOWNLOAD_CONNECTIONS}"

$WRITE ${PPDOM}.TV cddbPrefsOK -bool YES

#-----------------------------------------------------------#
# AppStoreDamon                                             #
#-----------------------------------------------------------#



$WRITE ${PPDOM}.appstored ArcadeDeviceIDCreationDate -date "2020-09-19 21:14:01 +0000"


$WRITE ${PPDOM}.appstored ArcadeSubscriptionState -string Unsubscribed

#-----------------------------------------------------------#
# Classroom                                                 #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Classroom "allowClassroomLockDevice-${ZERO_UUID}:0" -bool NO

$WRITE ${PPDOM}.Classroom "allowClassroomLockDevice-${ZERO_UUID}:0-ask" -bool YES

$WRITE ${PPDOM}.Classroom allowClassroomOpenApp -bool NO

$WRITE ${PPDOM}.Classroom "allowClassroomOpenApp-${ZERO_UUID}:0" -bool NO

$WRITE ${PPDOM}.Classroom "allowClassroomOpenApp-${ZERO_UUID}:0-ask" -bool YES

$WRITE ${PPDOM}.Classroom "allowClassroomOpenApp-ask" -bool YES

$WRITE ${PPDOM}.Classroom allowClassroomOpenURL -bool NO

$WRITE ${PPDOM}.Classroom "allowClassroomOpenURL-${ZERO_UUID}:0" -bool NO

$WRITE ${PPDOM}.Classroom "allowClassroomOpenURL-${ZERO_UUID}:0-ask" -bool YES

$WRITE ${PPDOM}.Classroom "allowClassroomOpenURL-ask" -bool YES

$WRITE ${PPDOM}.Classroom "allowClassroomScreenObservation-${ZERO_UUID}:0" -bool NO

$WRITE ${PPDOM}.Classroom "allowClassroomScreenObservation-${ZERO_UUID}:0-ask" -bool YES

$WRITE ${PPDOM}.Classroom classroomRoles -array instructor

$WRITE ${PPDOM}.Classroom "forceUnpromptedRemoteScreenObservation-${ZERO_UUID}:0" -bool NO

$WRITE ${PPDOM}.Classroom "forceUnpromptedRemoteScreenObservation-${ZERO_UUID}:0-ask" -bool YES

#-----------------------------------------------------------#
# Zoom                                                      #
#-----------------------------------------------------------#

$WRITE ZoomChat ZoomAccessibilityNotAllowAutoHidden -string true

$WRITE ZoomChat ZoomEnterFullscreenWhenViewShare -string false

$WRITE ZoomChat ZoomEnterMaxWndWhenViewShare -string false

$WRITE ZoomChat ZoomRememberPhoneKey -string false

$WRITE ZoomChat ZoomShouldShowSharingWithSplitView -string true

$WRITE ZoomChat "conf.webserver.vendor.default" -string "https://zoom.us"

#-----------------------------------------------------------#
# Zoom.xos                                                  #
#-----------------------------------------------------------#

$MKDIR ~/Movies/Zoom 2>/dev/null || true

$WRITE us.zoom.xos NSNavLastRootDirectory -string "~/Movies/Zoom"

$WRITE us.zoom.xos "User Select Language Identify" -string en

$WRITE us.zoom.xos kCaptureWithoutChatWindow -bool YES

$WRITE us.zoom.xos NSQuitAlwaysKeepsWindows -bool NO

$WRITE us.zoom.xos kZMSettingVBHaveGreenScreen -bool NO

$WRITE us.zoom.xos kZMUserDefaultMainWindowCompressed -bool NO

$WRITE us.zoom.xos kZMUserDefaultSelectedTabType -int 0

$WRITE us.zoom.xos "s_skinToneNum" -int 1

#-----------------------------------------------------------#
# QuickTime                                                 #
#-----------------------------------------------------------#

$DELETE ${PPDOM}.QuickTimePlayerX MGRecentDocumentURLBookmarks 2>/dev/null || true

$DELETE ${PPDOM}.QuickTimePlayerX NSNavLastUserSetHideExtensionButtonState 2>/dev/null || true

$DELETE ${PPDOM}.QuickTimePlayerX NSNavPanelExpandedSizeForSaveMode 2>/dev/null || true

$DELETE ${PPDOM}.QuickTimePlayerX "NSWindow Frame NSNavPanelAutosaveName" 2>/dev/null || true

$MKDIR ~/Movies/QuickTime 2>/dev/null || true

$WRITE ${PPDOM}.QuickTimePlayerX NSNavLastRootDirectory -string "~/Movies/QuickTime"

#-----------------------------------------------------------#
# iWorks                                                    #
#-----------------------------------------------------------#

#-----------------------------------------------------------#
# Numbers                                                   #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.iWork.Numbers NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

$WRITE ${PPDOM}.iWork.Numbers NSQuitAlwaysKeepsWindows -bool YES

$WRITE ${PPDOM}.iWork.Numbers TSKRemoteStringsLastLocalization -string en

$WRITE ${PPDOM}.iWork.Numbers TSAICloudAuthorNameKey -string "${AUTHOR_NAME}"

#$WRITE ${PPDOM}.iWork.Numbers TSWPIgnoredWordsDictionary -array

$WRITE ${PPDOM}.iWork.Numbers TSWPAutomaticallyDetectLinks -bool YES

$WRITE ${PPDOM}.iWork.Numbers TSWPAutomaticallyDetectLists -bool YES

$WRITE ${PPDOM}.iWork.Numbers TSWPGrammarChecking -bool YES

$WRITE ${PPDOM}.iWork.Numbers TSWPSpellCheckingEnabled -bool YES

$WRITE ${PPDOM}.iWork.Numbers TSWPSuperscriptNumericalSuffixes -bool YES

$WRITE ${PPDOM}.iWork.Numbers DownloadableContentURL -string "https://www.icloud.com/iwork/st/content"

#$WRITE ${PPDOM}.iWork.Numbers iCloudRegionInfo -dict "*.icloud.com.cn" '{ AssetHost = "localhost"; Domain = "icloud.com.cn"; DownloadableContentURL = "https://localhost/iwork/st/content"; URL = "https://localhost"; }'

#-----------------------------------------------------------#
# Keynote                                                   #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.iWork.Keynote KNRemoteCurrentDevicePlaybackUUID -string "uuidgen"

$WRITE ${PPDOM}.iWork.Keynote NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

$WRITE ${PPDOM}.iWork.Keynote NSQuitAlwaysKeepsWindows -bool YES

$WRITE ${PPDOM}.iWork.Keynote TSKRemoteStringsLastLocalization -string en

$WRITE ${PPDOM}.iWork.Keynote TSAICloudAuthorNameKey -string "${AUTHOR_NAME}"

$WRITE ${PPDOM}.iWork.Keynote DownloadableContentURL -string "https://www.icloud.com/iwork/st/content"

#$WRITE ${PPDOM}.iWork.Keynote TSWPIgnoredWordsDictionary -array

$WRITE ${PPDOM}.iWork.Keynote TSWPAutomaticallyDetectLinks -bool YES

$WRITE ${PPDOM}.iWork.Keynote TSWPAutomaticallyDetectLists -bool YES

$WRITE ${PPDOM}.iWork.Keynote TSWPGrammarChecking -bool YES

$WRITE ${PPDOM}.iWork.Keynote TSWPSpellCheckingEnabled -bool YES

$WRITE ${PPDOM}.iWork.Keynote TSWPSuperscriptNumericalSuffixes -bool YES

#$WRITE ${PPDOM}.iWork.Keynote iCloudRegionInfo -dict "*.icloud.com.cn" '{ AssetHost = "localhost"; Domain = "icloud.com.cn"; DownloadableContentURL = "https://localhost/iwork/st/content"; URL = "https://localhost"; }'

#-----------------------------------------------------------#
# Pages                                                     #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.iWork.Pages NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

$WRITE ${PPDOM}.iWork.Pages NSQuitAlwaysKeepsWindows -bool YES

$WRITE ${PPDOM}.iWork.Pages TSKRemoteStringsLastLocalization -string en

$WRITE ${PPDOM}.iWork.Pages TSAICloudAuthorNameKey -string "${AUTHOR_NAME}"

#$WRITE ${PPDOM}.iWork.Pages TSWPIgnoredWordsDictionary -array

$WRITE ${PPDOM}.iWork.Pages TSWPAutomaticallyDetectLinks -bool YES

$WRITE ${PPDOM}.iWork.Pages TSWPAutomaticallyDetectLists -bool YES

$WRITE ${PPDOM}.iWork.Pages TSWPGrammarChecking -bool YES

$WRITE ${PPDOM}.iWork.Pages TSWPSpellCheckingEnabled -bool YES

$WRITE ${PPDOM}.iWork.Pages TSWPSuperscriptNumericalSuffixes -bool YES

$WRITE ${PPDOM}.iWork.Pages DownloadableContentURL -string "https://www.icloud.com/iwork/st/content"

#$WRITE ${PPDOM}.iWork.Pages iCloudRegionInfo -dict "*.icloud.com.cn" '{ AssetHost = "localhost"; Domain = "icloud.com.cn"; DownloadableContentURL = "https://localhost/iwork/st/content"; URL = "https://localhost"; }'

#-----------------------------------------------------------#
# GoogleDrive                                               #
#-----------------------------------------------------------#

$WRITE ${GPDOM}.GoogleDrive NSNavLastRootDirectory -string "~/Public/Google Drive Drop Box"

$WRITE ${GPDOM}.GoogleDrive "onboarding_complete" -string shown

$WRITE ${GPDOM}.GoogleDrive ReportingAttributes -dict "com.google.Keystone" '{}'

#-----------------------------------------------------------#
# Keystone                                                  #
#-----------------------------------------------------------#

$WRITE ${GPDOM}.Keystone.Agent ReportingAttributes -dict "com.google.Keystone" '{}'

#-----------------------------------------------------------#
# AdGuard                                                   #
#-----------------------------------------------------------#

$WRITE com.adguard.safari.AdGuard NSTreatUnknownArgumentsAsOpen -string NO

#-----------------------------------------------------------#
# AppleMediaServices                                        #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.AppleMediaServices.notbackedup AMSDidRetrieveDeviceOffers -bool YES 

$WRITE ${PPDOM}.AppleMediaServices.notbackedup AMSDidRetrieveDeviceOffersEligibility -bool YES 

$WRITE ${PPDOM}.AppleMediaServices.notbackedup AMSDidRetrieveTVOffers -bool YES 

#-----------------------------------------------------------#
# AppleMultitouch                                           #
#-----------------------------------------------------------#

#-----------------------------------------------------------#
# Mouse                                                     #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.AppleMultitouchMouse MouseButtonDivision -int 55

$WRITE ${PPDOM}.AppleMultitouchMouse MouseButtonMode -string OneButton

$WRITE ${PPDOM}.AppleMultitouchMouse MouseHorizontalScroll -bool YES

$WRITE ${PPDOM}.AppleMultitouchMouse MouseMomentumScroll -bool YES

$WRITE ${PPDOM}.AppleMultitouchMouse MouseOneFingerDoubleTapGesture -int 0

$WRITE ${PPDOM}.AppleMultitouchMouse MouseTwoFingerDoubleTapGesture -int 3

$WRITE ${PPDOM}.AppleMultitouchMouse MouseTwoFingerHorizSwipeGesture -int 2

$WRITE ${PPDOM}.AppleMultitouchMouse MouseVerticalScroll -bool YES

$WRITE ${PPDOM}.AppleMultitouchMouse UserPreferences -bool YES

#-----------------------------------------------------------#
# Mouse Bluetooth Driver                                    #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse MouseButtonDivision -int 55

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse MouseButtonMode -string OneButton

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse MouseHorizontalScroll -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse MouseMomentumScroll -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse MouseOneFingerDoubleTapGesture -int 0

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse MouseTwoFingerDoubleTapGesture -int 3

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse MouseTwoFingerHorizSwipeGesture -int 2

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse MouseVerticalScroll -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.mouse UserPreferences -bool YES

#-----------------------------------------------------------#
# Trackpad                                                  #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.AppleMultitouchTrackpad ActuateDetents -int 1

$WRITE ${PPDOM}.AppleMultitouchTrackpad Clicking -bool YES

$WRITE ${PPDOM}.AppleMultitouchTrackpad DragLock -int 0

$WRITE ${PPDOM}.AppleMultitouchTrackpad Dragging -int 0

$WRITE ${PPDOM}.AppleMultitouchTrackpad FirstClickThreshold -int 1

$WRITE ${PPDOM}.AppleMultitouchTrackpad ForceSuppressed -bool NO

$WRITE ${PPDOM}.AppleMultitouchTrackpad SecondClickThreshold -int 1

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadCornerSecondaryClick -int 0

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadFiveFingerPinchGesture -int 2

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadFourFingerHorizSwipeGesture -int 2

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadFourFingerPinchGesture -int 2

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadFourFingerVertSwipeGesture -int 2

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadHandResting -bool YES

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadHorizScroll -int 1

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadMomentumScroll -bool YES

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadPinch -int 1

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadRightClick -bool YES

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadRotate -int 1

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadScroll -bool YES

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadThreeFingerDrag -bool NO

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadThreeFingerHorizSwipeGesture -int 2

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadThreeFingerTapGesture -int 0

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadThreeFingerVertSwipeGesture -int 2

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadTwoFingerDoubleTapGesture -int 0

$WRITE ${PPDOM}.AppleMultitouchTrackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -int 3

$WRITE ${PPDOM}.AppleMultitouchTrackpad USBMouseStopsTrackpad -int 0

$WRITE ${PPDOM}.AppleMultitouchTrackpad UserPreferences -bool YES

$WRITE ${PPDOM}.AppleMultitouchTrackpad version -int 12 || true

#-----------------------------------------------------------#
# Trackpad Bluetooth Driver                                 #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad ActuateDetents -int 1

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad Clicking -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad DragLock -int 0

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad Dragging -int 0

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad FirstClickThreshold -int 1

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad ForceSuppressed -bool NO

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad SecondClickThreshold -int 1

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 0

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadFiveFingerPinchGesture -int 2

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadFourFingerHorizSwipeGesture -int 2

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadFourFingerPinchGesture -int 2

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadFourFingerVertSwipeGesture -int 2

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadHandResting -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadHorizScroll -int 1

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadMomentumScroll -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadPinch -int 1

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadRotate -int 1

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadScroll -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerDrag -bool NO

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -int 2

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerTapGesture -int 0

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerVertSwipeGesture -int 2

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerDoubleTapGesture -int 0

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -int 3

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad USBMouseStopsTrackpad -int 0

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad UserPreferences -bool YES

$WRITE ${PPDOM}.driver.AppleBluetoothMultitouch.trackpad version -int 12 || true

#-----------------------------------------------------------#
# BKAgentService                                            #
#-----------------------------------------------------------#

$DELETE ${PPDOM}.BKAgentService 2>/dev/null || true

$WRITE ${PPDOM}.BKAgentService BKAgentServiceUseriCloudSetting -bool NO

#-----------------------------------------------------------#
# FaceTime                                                  #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.FaceTime CustomRingtone ""

$WRITE ${PPDOM}.FaceTime kPromptEnableReadRecipts -bool NO

#-----------------------------------------------------------#
# FontRegistry                                              #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.FontRegistry.user LastUpdated -date "${CURRENT_DATE_TIME}"

#-----------------------------------------------------------#
# HIToolbox                                                 #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.HIToolbox AppleCurrentKeyboardLayoutInputSourceID -string "com.apple.keylayout.US"

$WRITE ${PPDOM}.HIToolbox AppleEnabledInputSources -array '{InputSourceKind = "Keyboard Layout"; "KeyboardLayout ID" = 0; "KeyboardLayout Name" = "U.S.";}' '{"Bundle ID" = "com.apple.inputmethod.EmojiFunctionRowItem"; InputSourceKind = "Non Keyboard Input Method";}'

$WRITE ${PPDOM}.HIToolbox AppleSelectedInputSources -array '{InputSourceKind = "Keyboard Layout"; "KeyboardLayout ID" = 0; "KeyboardLayout Name" = "U.S.";}' '{"Bundle ID" = "com.apple.inputmethod.EmojiFunctionRowItem"; InputSourceKind = "Non Keyboard Input Method";}'

#-----------------------------------------------------------#
# LaunchServices                                            #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.LaunchServices LSQuarantine -bool YES || true

#-----------------------------------------------------------#
# Preferences                                               #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Preferences UserDictionaryImportedSinceMaintenance -int 0

$WRITE ${PPDOM}.Preferences UserDictionaryLastMaintenanceDate -date "${CURRENT_DATE_TIME}"


#-----------------------------------------------------------#
# SystemPreferences                                         #
#-----------------------------------------------------------#


$WRITE ${PPDOM}.systempreferences NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

$WRITE ${PPDOM}.systempreferences NSQuitAlwaysKeepsWindows -bool NO

$WRITE ${PPDOM}.systempreferences "com.apple.TimeMachine.OpenPanelDirectory" -string "${DEFAULT_SAVE_LOCATION}"

$DELETE ${PPDOM}.systempreferences "com.apple.dtandsspref.lastselectedtab" 2>/dev/null || true

$DELETE ${PPDOM}.systempreferences "com.apple.preference.keyboard.lastselectedtab" 2>/dev/null || true

$DELETE ${PPDOM}.systempreferences "trackpad.lastselectedtab" 2>/dev/null || true

#-----------------------------------------------------------#
# Safari                                                    #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Safari NSNavLastRootDirectory -string "~/Downloads"

$WRITE ${PPDOM}.Safari AlwaysRestoreSessionAtLaunch -bool NO

$WRITE ${PPDOM}.Safari AskBeforeSubmittingInsecureForms -bool YES

$WRITE ${PPDOM}.Safari AutoFillCreditCardData -bool NO

$WRITE ${PPDOM}.Safari AutoFillFromAddressBook -bool NO

$WRITE ${PPDOM}.Safari AutoFillMiscellaneousForms -bool NO

$WRITE ${PPDOM}.Safari AutoFillPasswords -bool NO

$WRITE ${PPDOM}.Safari AutoOpenSafeDownloads -bool NO

$WRITE ${PPDOM}.Safari CanPromptForPushNotifications -bool NO

$WRITE ${PPDOM}.Safari ExcludePrivateWindowWhenRestoringSessionAtLaunch -bool YES

$WRITE ${PPDOM}.Safari HistoryAgeInDaysLimit -int 8

$WRITE ${PPDOM}.Safari HomePage -string "https://www.google.com"

$DELETE ${PPDOM}.Safari IncludeInternalDebugMenu 2>/dev/null || true

#$WRITE ${PPDOM}.Safari LocalFileRestrictionsEnabled -bool YES

$WRITE ${PPDOM}.Safari NewTabBehavior -int 1

$WRITE ${PPDOM}.Safari NewWindowBehavior -int 1

$WRITE ${PPDOM}.Safari OpenPrivateWindowWhenNotRestoringSessionAtLaunch -bool YES

$WRITE ${PPDOM}.Safari OpenWindows -array

$WRITE ${PPDOM}.Safari PreloadTopHit -bool NO

$WRITE ${PPDOM}.Safari ProxiesInBookmarksBar -array

$WRITE ${PPDOM}.Safari RecentWebSearches -array

$WRITE ${PPDOM}.Safari SearchProviderIdentifier -string "com.duckduckgo"

$WRITE ${PPDOM}.Safari SendDoNotTrackHTTPHeader -bool YES

$WRITE ${PPDOM}.Safari ShowFavoritesBar -bool NO

$WRITE ${PPDOM}.Safari ShowFavoritesUnderSmartSearchField -bool NO

$WRITE ${PPDOM}.Safari ShowFullURLInSmartSearchField -bool YES

$WRITE ${PPDOM}.Safari SuppressSearchSuggestions -bool YES

$WRITE ${PPDOM}.Safari TreatSHA1CertificatesAsInsecure -bool YES

$WRITE ${PPDOM}.Safari WarnAboutFraudulentWebsites -bool YES

$WRITE ${PPDOM}.Safari WebAutomaticSpellingCorrectionEnabled -bool NO

$WRITE ${PPDOM}.Safari WebContinuousSpellCheckingEnabled -bool YES

$WRITE ${PPDOM}.Safari WebKitMediaPlaybackAllowsInline -bool NO

$WRITE ${PPDOM}.Safari WebKitTabToLinksPreferenceKey -bool YES

#-----------------------------------------------------------#
# SafariBookmarksSyncAgent                                  #
#-----------------------------------------------------------#


#-----------------------------------------------------------#
# Siri                                                      #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Siri.SiriTodayExtension AppleLanguages -array $(echo -n "${LANG}" | tr '_-' '-')

$WRITE ${PPDOM}.Siri.SiriTodayExtension AppleLocale -string ${LANG}

#-----------------------------------------------------------#
# SiriNCService                                             #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.SiriNCService AppleLanguages -array $(echo -n "${LANG}" | tr '_-' '-')

$WRITE ${PPDOM}.SiriNCService AppleLocale -string ${LANG}

#-----------------------------------------------------------#
# siri.context.service                                      #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.siri.context.service InstalledLanguages -array $(echo -n "${LANG}" | tr '_-' '-')

#-----------------------------------------------------------#
# Spotlight                                                 #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.Spotlight orderedItems -array (TO_BE_MERGED)

#-----------------------------------------------------------#
# TelephonyUtilities                                        #
#-----------------------------------------------------------#

#recheck on OS updates
$WRITE ${PPDOM}.TelephonyUtilities CachedVCCaps -int 17592188010496

$WRITE ${PPDOM}.TelephonyUtilities thumperCallingCapabilitiesStates -array ;

#-----------------------------------------------------------#
# X11                                                       #
#-----------------------------------------------------------#

$WRITE org.x.X11 nolisten_tcp -bool YES

$DELETE org.x.X11 wm_ffm 2>/dev/null || true

#-----------------------------------------------------------#
# TextInputMenu                                             #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.TextInputMenu visible -bool YES

#-----------------------------------------------------------#
# accountsd                                                 #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.accountsd "com.apple.mail.searchableIndex.lastProcessedAttachmentIDKey" -int 0

$DELETE ${PPDOM}.accountsd "com.apple.mail.searchableIndex.lastProcessedAttachmentIDKey" 2>/dev/null || true

#-----------------------------------------------------------#
# assistant.backedup                                        #
#-----------------------------------------------------------#


#$WRITE ${PPDOM}.assistant.backedup "Modification Dates" -dict "Logging User Identifier" "${CURRENT_DATE_TIME}" "User Identifier" "${CURRENT_DATE_TIME}" "Output Voice" "${CURRENT_DATE_TIME}"

$WRITE ${PPDOM}.assistant.backedup "Session Language" -string $(echo -n "${LANG}" | tr '_-' '-')

#-----------------------------------------------------------#
# assistant.support                                         #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.assistant.support "Dictation Enabled" -bool YES

$WRITE ${PPDOM}.assistant.support "Siri Data Sharing Opt-In Status" -int 2

#-----------------------------------------------------------#
# cloudpaird                                                #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.cloudpaird MagicCloudPairingAccessoryEncryptionPreferences -bool YES

$WRITE ${PPDOM}.cloudpaird MagicCloudPairingMasterEncryptionPreferences -bool YES

$WRITE ${PPDOM}.cloudpaird MagicCloudPairingProtectedAccessorySubscription -bool YES

$WRITE ${PPDOM}.cloudpaird SecuredAccessoryZoneSubscription -bool YES

$WRITE ${PPDOM}.cloudpaird SecuredZoneSubscription -bool YES

#-----------------------------------------------------------#
# cloudphotod                                               #
#-----------------------------------------------------------#


$DELETE ${PPDOM}.cloudphotod "_CPLPreviousOSBuildVersion" 2>/dev/null || true

$DELETE ${PPDOM}.cloudphotod "_CPLPreviousCPLVersion" 2>/dev/null || true

#-----------------------------------------------------------#
# mediaanalysisd                                            #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.mediaanalysisd PhotoLibraries -array "~/Pictures/Photos Library.photoslibrary"

#-----------------------------------------------------------#
# photoanalysisd                                            #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.photoanalysisd PHAPhotoLibraryList -dict "~/Pictures/Photos Library.photoslibrary" '{ path = "~/Pictures/Photos Library.photoslibrary"; version = 1; }'

#-----------------------------------------------------------#
# commcenter                                                #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.commcenter PersonalitySlots -array ""

#$WRITE ${PPDOM}.commcenter PhoneServices -dict Version 1

#-----------------------------------------------------------#
# commcenter.callservices                                   #
#-----------------------------------------------------------#


#-----------------------------------------------------------#
# commerce                                                  #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.commerce AutoUpdate -bool NO

#-----------------------------------------------------------#
# corerecents.recentsd                                      #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.corerecents.recentsd LastiCloudAccountPersonID -string ${CLOUD_ID}

$WRITE ${PPDOM}.corerecents.recentsd LastiCloudAccountWasLoggedIn -bool YES

#-----------------------------------------------------------#
# dashboard                                                 #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.dashboard devmode -bool YES

$WRITE ${PPDOM}.dashboard "mcx-disabled" -bool YES

#-----------------------------------------------------------#
# desktopservices                                           #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.desktopservices DSDontWriteNetworkStores -bool YES

$WRITE ${PPDOM}.desktopservices DSDontWriteUSBStores -bool YES

#-----------------------------------------------------------#
# fmip                                                      #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.icloud.fmip clientconfiguration -dict-add deviceNameSyncEnabled 1 nearbyScanEnabled 1 nearbyScanWhileAuthenticated 1

#-----------------------------------------------------------#
# fmip.voiceassistantsync                                   #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.icloud.fmip.voiceassistantsync object -dict-add ownerPersonId ${CLOUD_ID}


#-----------------------------------------------------------#
# preferences.screentime                                    #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.preferences.screentime HasShownCommunicationLimitsCompatibilityAlertByDSID -dict ${CLOUD_ID} 1

#-----------------------------------------------------------#
# gamed                                                     #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.gamed GKLastPushTokenPlayerID -string "G:${CLOUD_ID}"

#-----------------------------------------------------------#
# helpviewer                                                #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.helpviewer DevMode -bool YES

$WRITE ${PPDOM}.helpviewer HVIncludesKBSearches -bool YES

$WRITE ${PPDOM}.helpviewer WebKitOfflineWebApplicationCacheEnabled -bool YES

#-----------------------------------------------------------#
# icloud.fmfd                                               #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.icloud.fmfd kFMFDlastLoggedInPrsId -string ${CLOUD_ID}

$WRITE ${PPDOM}.icloud.fmfd storedDSID -string ${CLOUD_ID}

#$WRITE ${PPDOM}.icloud.fmfd storedConfigKey -dict-add sendOnlyFMFChannel 1 blockFMFChannel 0

#-----------------------------------------------------------#
# imdpersistence.IMDPersistenceAgent                        #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.imdpersistence.IMDPersistenceAgent LogAllIOErrors -bool YES

#-----------------------------------------------------------#
# imservice.ids.FaceTime                                    #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.imservice.ids.FaceTime ActiveAccounts -array "${FACETIME_MESSAGES_ID}"

$WRITE ${PPDOM}.imservice.ids.FaceTime OnlineAccounts -array "${FACETIME_MESSAGES_ID}"

#-----------------------------------------------------------#
# imservice.ids.iMessage                                    #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.imservice.ids.iMessage ActiveAccounts -array "${MESSAGES_ID}"

#$WRITE ${PPDOM}.imservice.ids.iMessage OnlineAccounts -array "${MESSAGES_ID}"

#$WRITE ${PPDOM}.imservice.ids.iMessage ActiveAccounts -array "${FACETIME_MESSAGES_ID}"

#$WRITE ${PPDOM}.imservice.ids.iMessage OnlineAccounts -array "${FACETIME_MESSAGES_ID}"

#-----------------------------------------------------------#
# Battery                                                   #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.menuextra.battery ShowPercent -string YES

#-----------------------------------------------------------#
# NotificationCenterUI                                      #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.notificationcenterui TodayView -dict order '("com.apple..NowPlayingWidgetContainer.NowPlayingWidget", "com.apple.iCal.CalendarNC", "com.apple.ncplugin.calculator", "com.apple.ncplugin.WorldClock", "com.apple.reminders.macOSTodayExtension", "com.apple.ncplugin.weather")' preferences '{ "com.apple.nc.disclosures" = { enabled = 1; }; "com.apple.nc.today.date" = { enabled = 1; }; "com.apple.nc.today.dnd" = { enabled = 1; }; "com.apple.nc.today.summary" = { enabled = 1; }; "com.apple.nc.tomorrow.summary" = { enabled = 1; }; }'

#-----------------------------------------------------------#
# photolibraryd                                             #
#-----------------------------------------------------------#

#In photolibraryd, remove PLLibraryBookmarkManagerBookmarksByPath if changed from "~/Pictures/Photos Library.photoslibrary"

$WRITE ${PPDOM}.photolibraryd kPLPhotoStreamMPSStateNextCheckDateKey -date "${CURRENT_DATE_TIME}"

#-----------------------------------------------------------#
# photos.shareddefaults                                     #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.photos.shareddefaults iCloudPhotoLibraryHasBeenEnabledAccountIdentifiers -array "${CLOUD_UUID}"

#$WRITE ${PPDOM}.photos.shareddefaults CPLDefaultDownload -string Default

#-----------------------------------------------------------#
# Screentime                                                #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.preferences.screentime HasBeenIntroduced -bool YES

$WRITE ${PPDOM}.preferences.screentime HasShownCommunicationLimitsCompatibilityAlertByDSID -dict-add ${CLOUD_ID} 1

#-----------------------------------------------------------#
# messages.nicknames                                        #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.messages.nicknames NicknameAppleIDAndiCloudAccountMatchAndExist -bool YES

#-----------------------------------------------------------#
# print.PrintingPrefs                                       #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.print.PrintingPrefs "Quit When Finished" -bool YES

#-----------------------------------------------------------#
# print.add                                                 #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.print.add NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

#-----------------------------------------------------------#
# security.cloudkeychainproxy3.keysToRegister               #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.security.cloudkeychainproxy3.keysToRegister DSID -string ${CLOUD_ID}

#$WRITE ${PPDOM}.security.cloudkeychainproxy3.keysToRegister KeyAccountUUID -string "UUIDgen"

#-----------------------------------------------------------#
# quicklook.ThumbnailsAgent                                 #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.quicklook.ThumbnailsAgent QLMTCacheSizeLastCheckAbsoluteTime -float "${CURRENT_SECONDS}"

#-----------------------------------------------------------#
# rapport                                                   #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.rapport familySyncedName -string MusicBook

#-----------------------------------------------------------#
# routined                                                  #
#-----------------------------------------------------------#


#-----------------------------------------------------------#
# screencapture                                             #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.screencapture "disable-shadow" -bool YES

$WRITE ${PPDOM}.screencapture type -string heic

$MKDIR ~/Pictures/Screenshots 2>/dev/null || true

$WRITE ${PPDOM}.screencapture location -string "~/Pictures/Screenshots"

$WRITE ${PPDOM}.screencapture "last-analytics-stamp" -float "${CURRENT_SECONDS}"

#-----------------------------------------------------------#
# screensaver                                               #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.screensaver askForPassword -bool YES

#Needs smartcard
#$WRITE ${PPDOM}.screensaver tokenRemovalAction -bool YES

$WRITE ${PPDOM}.screensaver askForPasswordDelay -bool NO

#-----------------------------------------------------------#
# sharingd                                                  #
#-----------------------------------------------------------#

#$WRITE ${PPDOM}.sharingd AutoUnlockPresentedBluetoothError -bool NO

#$WRITE ${PPDOM}.sharingd AutoUnlockPresentedWiFiError -bool NO

#$WRITE ${PPDOM}.sharingd OneTimeAirDropReset2 -bool YES

#$WRITE ${PPDOM}.sharingd UserDefaultsHashesDirtyKey -bool NO

#$WRITE ${PPDOM}.sharingd hashesAreCorrectKey -bool YES

#$WRITE ${PPDOM}.sharingd lastUpdated -date "2020-09-18 02:22:25 +0000"
$WRITE ${PPDOM}.sharingd lastUpdated -date "${CURRENT_DATE_TIME}"

#-----------------------------------------------------------#
# sms                                                       #
#-----------------------------------------------------------#

#Receive phone texts on this one
$WRITE ${PPDOM}.sms hasBeenApprovedForSMSRelay -bool YES

#-----------------------------------------------------------#
# speech.recognition.AppleSpeechRecognition.prefs           #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.speech.recognition.AppleSpeechRecognition.prefs DictationIMIntroMessagePresented -bool YES

#-----------------------------------------------------------#
# stocks.account                                            #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.stocks.account deleteOnNextLaunch -bool YES

#-----------------------------------------------------------#
# studentd                                                  #
#-----------------------------------------------------------#



#-----------------------------------------------------------#
# systemuiserver                                            #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.systemuiserver "NSStatusItem Visible Siri" -bool YES

$WRITE ${PPDOM}.systemuiserver "NSStatusItem Visible com.apple.menuextra.TimeMachine" -bool YES

$WRITE ${PPDOM}.systemuiserver "NSStatusItem Visible com.apple.menuextra.airport" -bool YES

$WRITE ${PPDOM}.systemuiserver "NSStatusItem Visible com.apple.menuextra.appleuser" -bool YES

$WRITE ${PPDOM}.systemuiserver "NSStatusItem Visible com.apple.menuextra.battery" -bool YES

$WRITE ${PPDOM}.systemuiserver "NSStatusItem Visible com.apple.menuextra.bluetooth" -bool YES

$WRITE ${PPDOM}.systemuiserver "NSStatusItem Visible com.apple.menuextra.clock" -bool YES

$WRITE ${PPDOM}.systemuiserver "last-analytics-stamp" -float ${CURRENT_SECONDS}

$WRITE ${PPDOM}.systemuiserver menuExtras -array "/System/Library/CoreServices/Menu Extras/User.menu" "/System/Library/CoreServices/Menu Extras/Clock.menu" "/System/Library/CoreServices/Menu Extras/Battery.menu" "/System/Library/CoreServices/Menu Extras/AirPort.menu" "/System/Library/CoreServices/Menu Extras/Bluetooth.menu" "/System/Library/CoreServices/Menu Extras/TimeMachine.menu"

#-----------------------------------------------------------#
# textInput.keyboardServices.textReplacement                #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.textInput.keyboardServices.textReplacement KSLSShouldUpdateCache -bool YES

#-----------------------------------------------------------#
# touristd                                                  #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.touristd firstOSLogin -date "2020-08-28 03:21:14 +0000"

#-----------------------------------------------------------#
# universalaccess                                           #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.universalaccess closeViewHotkeysEnabled -bool NO

$WRITE ${PPDOM}.universalaccess closeViewZoomDisplayID -bool NO

$WRITE ${PPDOM}.universalaccess closeViewZoomFactor -bool YES

$WRITE ${PPDOM}.universalaccess login -bool NO

#-----------------------------------------------------------#
# knowledge-agent                                           #
#-----------------------------------------------------------#

$WRITE knowledge-agent ScreenTimeSyncDisabled -bool NO

#-----------------------------------------------------------#
# Signal                                                    #
#-----------------------------------------------------------#

$WRITE org.whispersystems.signal-desktop NSNavLastRootDirectory -string "${DEFAULT_SAVE_LOCATION}"

#-----------------------------------------------------------#
# Maps                                                      #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Maps LastClosedWindowViewOptions -dict isMapViewCenteredOnUserLocation 0 mapType 0 preferredDirectionsType 1 showLabels 1 showsUserLocation 1 trafficEnabled 1

$WRITE ${PPDOM}.Maps LastClosedWindowViewOptions -dict CenterLatitude "49.2425261751518" CenterLongitude "-78.22428722681242" PitchRadians 0 TileSize 512 YawRadians "-0" ZoomLevel "1.965784"

#-----------------------------------------------------------#
# TextInputMenu                                             #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.TextInputMenu visible -bool NO

#-----------------------------------------------------------#
# TextInputMenuAgent                                        #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.TextInputMenuAgent "NSStatusItem Visible Item-0" -bool NO

#-----------------------------------------------------------#
# Preferences.Extensions                                    #
#-----------------------------------------------------------#

#-----------------------------------------------------------#
# PhotoEditing                                              #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Preferences.Extensions.PhotoEditing displayOrder -array "com.apple.MarkupUI.MarkupPhotoExtension"

$WRITE ${PPDOM}.Preferences.Extensions.PhotoEditing userHasOrdered -bool YES

#-----------------------------------------------------------#
# PhotoProjects (Probationary)                              #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Preferences.Extensions.PhotoProjects displayOrder -array

$WRITE ${PPDOM}.Preferences.Extensions.PhotoProjects userHasOrdered -bool YES

#-----------------------------------------------------------#
# QuickLook                                                 #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Preferences.Extensions.QuickLook displayOrder -array "com.apple.reminders.quicklookextension"

$WRITE ${PPDOM}.Preferences.Extensions.QuickLook userHasOrdered -bool YES

#-----------------------------------------------------------#
# ServicesWithUI                                            #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Preferences.Extensions.ServicesWithUI displayOrder -array "com.apple.MarkupUI.Markup"

$WRITE ${PPDOM}.Preferences.Extensions.ServicesWithUI userHasOrdered -bool YES

$WRITE ${PPDOM}.Preferences.Extensions.ShareMenu displayOrder -array "com.apple.Notes.SharingExtension" "com.apple.share.AirDrop.send" "com.apple.share.System.add-to-safari-reading-list" "com.apple.reminders.sharingextension" "com.apple.share.Mail.compose" "com.apple.messages.ShareExtension" "com.apple.share.System.add-to-iphoto" "com.apple.share.CloudSharing.invite" "com.apple.iBooksX.SharingExtension"
 
$WRITE ${PPDOM}.Preferences.Extensions.ShareMenu userHasOrdered -bool YES

#-----------------------------------------------------------#
# SharedLinks                                               #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Preferences.Extensions.SharedLinks displayOrder -array

$WRITE ${PPDOM}.Preferences.Extensions.SharedLinks userHasOrdered -bool YES

#-----------------------------------------------------------#
# Preferences.Screentime                                    #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.preferences.screentime HasBeenIntroduced -bool YES

$WRITE ${PPDOM}.preferences.screentime HasShownCommunicationLimitsCompatibilityAlertByDSID -dict ${CLOUD_ID} 1

#-----------------------------------------------------------#
# findmy.*.notbackedup                                      #
#-----------------------------------------------------------#

#defaults find $(defaults read com.apple.findmy.fmfcore.notbackedup publicAPSToken) | grep -o "com.apple.findmy.*.notbackedup" | xargs -L1 -I{} $WRITE {} publicAPSToken $(defaults read com.apple.findmy.fmfcore.notbackedup publicAPSToken)

#-----------------------------------------------------------#
# FMF                                                       #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.findmy.fmfcore.notbackedup FMFGarbageCollectorIdentityKey -string ${CLOUD_ID}

$WRITE ${PPDOM}.findmy.fmfcore.notbackedup publicAPSToken -string ${TOKEN_ID}

$WRITE ${PPDOM}.findmy.fmfcore.notbackedup windowVisible -bool YES

#-----------------------------------------------------------#
# FMIP                                                      #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.findmy.fmipcore.notbackedup FMIPGarbageCollectorIdentityKey -string ${CLOUD_ID}

$WRITE ${PPDOM}.findmy.fmipcore.notbackedup publicAPSToken -string ${TOKEN_ID}

$WRITE ${PPDOM}.findmy.fmfcore.notbackedup windowVisible -bool YES

#-----------------------------------------------------------#
# frameworks.diskimages                                     #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.frameworks.diskimages "auto-open-ro-root" -bool NO

$WRITE ${PPDOM}.frameworks.diskimages "auto-open-rw-root" -bool NO

$WRITE ${PPDOM}.frameworks.diskimages "skip-verify" -bool NO

$WRITE ${PPDOM}.frameworks.diskimages "skip-verify-locked" -bool YES

$WRITE ${PPDOM}.frameworks.diskimages "skip-verify-remote" -bool YES

#-----------------------------------------------------------#
# Preview                                                   #
#-----------------------------------------------------------#

$WRITE ${PPDOM}.Preview PVGeneralUserName -string "${CLOUD_UN}"

$WRITE ${PPDOM}.Preview kPVPDFDefaultPageViewModeOption -int 0

echo ""
echo "========== Just Finished =========="

#-----------------------------------------------------------#
# DOMAINS TO RESEARCH FURTHER                    #
#-----------------------------------------------------------#

#com.apple.mail-shared
#com.apple.FaceTime
#org.whispersystems.signal-desktop
#com.apple.Messages
#com.apple.imessage
#com.apple.imservice.ids.iMessage
#com.apple.Music
#com.apple.preferences.extensions.XcodeSourceEditor
#com.apple.findmy
#com.apple.findmy.fmfcore.notbackedup
#com.apple.findmy.fmipcore.notbackedup
#com.apple.keychainaccess
#com.apple.bird
#com.apple.security.cloudkeychainproxy3.keysToRegister
#com.apple.Preview

#-----------------------------------------------------------#
# NO PREFERENCES BELOW THIS POINT                           #
#-----------------------------------------------------------#

echo "== Enforcing REQUIRED USER prefs =="

source ~/.macrc || true























