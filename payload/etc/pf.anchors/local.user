#! /sbin/pfctl -R

include "/etc/pf.extras"

#######
# RULES
#######

# block packets whose ingress interface does not match the one in
# the route back to their source address
# block in from urpf-failed to any

set skip on $int_if

anchor "local.user/*" {
	block in log all label "default block rule"
	anchor "../0.dhcp" {
		pass out quick inet proto udp from any port 68 to any port 67 label "allow DHCP requests out"
		pass in quick inet proto udp from any port 67 to any port 68 label "allow DHCP responses in"
		pass out quick inet6 proto tcp from any port 547 to any port 547 label "allow DHCPv6 requests out"
		pass in quick inet6 proto tcp from any port 547 to any port 547 label "allow DHCPv6 responses in"
		anchor "../bad.dhcp" {
			block out quick proto udp from any port 67 to any label "block DHCP responses out"
		}
	}
	anchor "../0.other" {
		block in log quick from no-route to any label "block anyonomus stuff"
	}
	anchor "../100.control" {
		block in inet proto icmp probability 20% icmp-type 8 code 0 no state
		pass out inet proto icmp from any to any icmp-type 8 code 0
		pass out inet6 proto 58 from any to any icmp6-type 129 code 0
		block in quick inet proto icmp from any to any icmp-type 8 code 0
		block in quick inet6 proto 58 from any to any icmp6-type 129 code 0
	}
	anchor "../200.odd" {
		block log quick on $most_if proto $rare_proto all label "block unusual $if stuff"
		block log on $rare_if proto $rare_proto all label "block odd $if stuff"
	}
	anchor "../300" {
		pass out proto tcp from any to any port $extra_tcp_pts modulate state
		pass out proto tcp from any to any port $tcp_pts keep state label "Allow TCP Egress"
	}
	anchor "../300.local" on $most_if {
		pass in proto tcp from any to {<me>} port $tcp_push_pts keep state
		pass out proto tcp from {<me>} to any port $tcp_push_pts keep state
		pass out proto tcp from {<private>} port $tcp_push_pts to {<private>} keep state
		pass out proto tcp from {<private>} port $tcp_dyn_air_pts to {<private>} keep state
	}
	anchor "../300.incoming" {
		block in quick proto tcp from any port $tcp_pts to any flags S/SFRAPU no state
		block return in proto tcp from any port $tcp_pts to any flags S/SFRAP
		block in proto tcp from any port $tcp_pts to any flags S/SA
	}
	anchor "../302" on $most_if {
		pass in proto tcp from any port $tcp_pts to any port $dyn_pts flags FA/SFRAP no state
		pass in proto tcp from any port $tcp_pts to any port $dyn_pts flags RA/SFRAP no state
	}
	anchor "../321.time" on $most_if {
		pass out proto udp from any port 123 to any port $dyn_pts label "Allow NTP"
	}
	anchor "../400.dns" {
		block in quick proto tcp from any port 53 to any flags S/SFRA no state label "Ignore DNS Scans"
		block drop in quick log proto udp from any port 53 to any port <1024 label "Block Odd DNS"
		pass out proto udp from any to $dns_srv port 53 keep state label "Allow Pure DNS via $dstaddr"
		pass out proto udp from any to $cloudflare_dns_srv port 53 keep state label "Allow Pure DNS via $dstaddr"
		pass out proto udp from any to $google_dns_srv port 53 keep state label "Allow google DNS"
		pass out log proto udp from {<me>} to any port 53 label "Allow other DNS with logging"
	}
	anchor "../500" on $most_if {
		pass in proto udp from any port $udp_pts to any port $dyn_pts label "Allow most UDP"
		pass in proto udp from any to any port $udp_itunes_airplay_pts label "Allow some apple continuity via UDP"
		pass in proto udp from any to any port $udp_dyn_air_pts label "Allow mDNS and apple continuity"
		pass in proto udp from any port $udp_push_pts to any port $dyn_pts keep state label "Allow apple push notification ports in"
	}
	anchor "../999.default" {
		pass out proto tcp from {<me>} to any no state label "Allow TCP Egress"
		pass out proto udp from {<me>} to any no state label "Allow UDP Egress"
		pass out proto tcp from any to any keep state label "Allow TCP Egress"
		pass out proto udp from any to any keep state label "Allow UDP Egress"
		pass out proto icmp all no state label "Allow ICMP Egress"
		pass out inet6 proto $ipv6_protos all no state label "Allow IPv6 Egress"
	}
}

block drop in quick on $all_if from {<blocklist>} to any label "Blacklisted Ingress Default Rule"
block return out quick on $most_if from any to {<blocklist>} label "Blacklisted Egress Default Rule"
