#! /bin/bash --posix
# Disclaimer of Warranties.
# A. YOU EXPRESSLY ACKNOWLEDGE AND AGREE THAT, TO THE EXTENT PERMITTED BY
#    APPLICABLE LAW, USE OF THIS SHELL SCRIPT AND ANY SERVICES PERFORMED
#    BY OR ACCESSED THROUGH THIS SHELL SCRIPT IS AT YOUR SOLE RISK AND
#    THAT THE ENTIRE RISK AS TO SATISFACTORY QUALITY, PERFORMANCE, ACCURACY AND
#    EFFORT IS WITH YOU.
#
# B. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SHELL SCRIPT
#    AND SERVICES ARE PROVIDED "AS IS" AND “AS AVAILABLE”, WITH ALL FAULTS AND
#    WITHOUT WARRANTY OF ANY KIND, AND THE AUTHOR OF THIS SHELL SCRIPT'S LICENSORS
#    (COLLECTIVELY REFERRED TO AS "THE AUTHOR" FOR THE PURPOSES OF THIS DISCLAIMER)
#    HEREBY DISCLAIM ALL WARRANTIES AND CONDITIONS WITH RESPECT TO THIS SHELL SCRIPT
#    SOFTWARE AND SERVICES, EITHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT
#    NOT LIMITED TO, THE IMPLIED WARRANTIES AND/OR CONDITIONS OF
#    MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A PARTICULAR PURPOSE,
#    ACCURACY, QUIET ENJOYMENT, AND NON-INFRINGEMENT OF THIRD PARTY RIGHTS.
#
# C. THE AUTHOR DOES NOT WARRANT AGAINST INTERFERENCE WITH YOUR ENJOYMENT OF THE
#    THE AUTHOR's SOFTWARE AND SERVICES, THAT THE FUNCTIONS CONTAINED IN, OR
#    SERVICES PERFORMED OR PROVIDED BY, THIS SHELL SCRIPT WILL MEET YOUR
#    REQUIREMENTS, THAT THE OPERATION OF THIS SHELL SCRIPT OR SERVICES WILL
#    BE UNINTERRUPTED OR ERROR-FREE, THAT ANY SERVICES WILL CONTINUE TO BE MADE
#    AVAILABLE, THAT THIS SHELL SCRIPT OR SERVICES WILL BE COMPATIBLE OR
#    WORK WITH ANY THIRD PARTY SOFTWARE, APPLICATIONS OR THIRD PARTY SERVICES,
#    OR THAT DEFECTS IN THIS SHELL SCRIPT OR SERVICES WILL BE CORRECTED.
#    INSTALLATION OF THIS THE AUTHOR SOFTWARE MAY AFFECT THE USABILITY OF THIRD
#    PARTY SOFTWARE, APPLICATIONS OR THIRD PARTY SERVICES.
#
# D. YOU FURTHER ACKNOWLEDGE THAT THIS SHELL SCRIPT AND SERVICES ARE NOT
#    INTENDED OR SUITABLE FOR USE IN SITUATIONS OR ENVIRONMENTS WHERE THE FAILURE
#    OR TIME DELAYS OF, OR ERRORS OR INACCURACIES IN, THE CONTENT, DATA OR
#    INFORMATION PROVIDED BY THIS SHELL SCRIPT OR SERVICES COULD LEAD TO
#    DEATH, PERSONAL INJURY, OR SEVERE PHYSICAL OR ENVIRONMENTAL DAMAGE,
#    INCLUDING WITHOUT LIMITATION THE OPERATION OF NUCLEAR FACILITIES, AIRCRAFT
#    NAVIGATION OR COMMUNICATION SYSTEMS, AIR TRAFFIC CONTROL, LIFE SUPPORT OR
#    WEAPONS SYSTEMS.
#
# E. NO ORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY THE AUTHOR
#    SHALL CREATE A WARRANTY. SHOULD THIS SHELL SCRIPT OR SERVICES PROVE DEFECTIVE,
#    YOU ASSUME THE ENTIRE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
#
#    Limitation of Liability.
# F. TO THE EXTENT NOT PROHIBITED BY APPLICABLE LAW, IN NO EVENT SHALL THE AUTHOR
#    BE LIABLE FOR PERSONAL INJURY, OR ANY INCIDENTAL, SPECIAL, INDIRECT OR
#    CONSEQUENTIAL DAMAGES WHATSOEVER, INCLUDING, WITHOUT LIMITATION, DAMAGES
#    FOR LOSS OF PROFITS, CORRUPTION OR LOSS OF DATA, FAILURE TO TRANSMIT OR
#    RECEIVE ANY DATA OR INFORMATION, BUSINESS INTERRUPTION OR ANY OTHER
#    COMMERCIAL DAMAGES OR LOSSES, ARISING OUT OF OR RELATED TO YOUR USE OR
#    INABILITY TO USE THIS SHELL SCRIPT OR SERVICES OR ANY THIRD PARTY
#    SOFTWARE OR APPLICATIONS IN CONJUNCTION WITH THIS SHELL SCRIPT OR
#    SERVICES, HOWEVER CAUSED, REGARDLESS OF THE THEORY OF LIABILITY (CONTRACT,
#    TORT OR OTHERWISE) AND EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE
#    POSSIBILITY OF SUCH DAMAGES. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION
#    OR LIMITATION OF LIABILITY FOR PERSONAL INJURY, OR OF INCIDENTAL OR
#    CONSEQUENTIAL DAMAGES, SO THIS LIMITATION MAY NOT APPLY TO YOU. In no event
#    shall THE AUTHOR's total liability to you for all damages (other than as may
#    be required by applicable law in cases involving personal injury) exceed
#    the amount of five dollars ($5.00). The foregoing limitations will apply
#    even if the above stated remedy fails of its essential purpose.
################################################################################

# Function to list dangling tags
function list_dangling_commits_by_desc() {
	git fsck --full --strict --lost-found --name-objects 2>/dev/null | \
	awk '{print $3}' | \
	xargs -L1 -I{} git describe --tags --always --candidates=100 {} 2>/dev/null | \
	xargs -L1 -I{} printf "%s\n" {}
}

# Function to list dangling trees
function list_dangling_trees() {
	git fsck --full --strict --lost-found --name-objects 2>/dev/null | \
	grep -ovF "blob" | \
	awk '{print $3}' | \
	xargs -L1 -I{} printf "%s\n" {}
}

# Function to list dangling trees
function list_dangling_tree_blobs() {
	list_dangling_trees | \
	xargs -L1 -I{} git ls-tree -r {} 2>/dev/null | \
	grep -F "blob" | \
	sort -ds -t\s -k4 | \
	sort -fibrus -t/ | \
	sort -fib -t\s -k4 | \
	tr '\t' ' ' | \
	awk '{print $3}' | \
	xargs -L1 -I{} printf "%s\n" {}
}

# Function to list dangling blob paths
function list_dangling_trees_dangling_blobs() {
	for blob_sha in $(list_dangling_tree_blobs) ; do
		# Check if the blob is reachable
		if ! git cat-file -e $blob_sha 2>/dev/null; then
			printf "%s\n" "$blob_sha"
		elif [ -f ".git/lost-found/other/$blob_sha" ]; then
			printf "%s\n" "$blob_sha"
		fi
	done ;
}

# Function to output the path to a blob object
function path_from_blob() {
	local blob_hash="$1"
	if git cat-file -e "$blob_hash" ; then
		local path_to_blob=".git/objects/${blob_hash:0:2}/${blob_hash:2}"
		printf "%s\n" "$path_to_blob"
	fi ;
}

# Function to list dangling blobs
function list_dangling_blobs() {
	git fsck --full --strict --lost-found --name-objects 2>/dev/null | \
	grep -F "blob" | \
	awk '{print $3}' | \
	xargs -L1 -I{} printf "%s\n" {}
}

# Function to list dangling blob paths
function list_dangling_blob_paths() {
	for blob_sha in $(list_dangling_blobs ) ; do
		path_from_blob "$blob_sha"
	done ;
}

# Function to list dangling tree blob paths
function list_dangling_tree_blob_paths() {
	for blob_sha in $(list_dangling_trees ) ; do
		path_from_blob "$blob_sha"
		if [ -f ".git/lost-found/other/$blob_sha" ]; then
			printf "%s\n" ".git/lost-found/other/$blob_sha"
		fi
	done ;
}

function list_dangling_trees_dangling_blob_paths() {
	for blob_sha in $(list_dangling_trees_dangling_blobs ) ; do
		path_from_blob "$blob_sha"
		if [ -f ".git/lost-found/other/$blob_sha" ]; then
			printf "%s\n" ".git/lost-found/other/$blob_sha"
		fi
	done ;
}

# Main function to execute the desired operations
function main() {
	list_dangling_commits_by_desc
	list_dangling_trees
	# list_dangling_tree_blob_paths | xargs -L1 -I{} "rm -v {}"
	list_dangling_trees_dangling_blobs
	# list_dangling_trees_dangling_blob_paths | xargs -L1 -I{} "rm -v {}"
	list_dangling_blob_paths
	# list_dangling_blob_paths | xargs -L1 -I{} "rm -v {}"
}

# Execute the main function
main
