#! /bin/bash --posix
# Disclaimer of Warranties.
# A. YOU EXPRESSLY ACKNOWLEDGE AND AGREE THAT, TO THE EXTENT PERMITTED BY
#    APPLICABLE LAW, USE OF THIS SHELL SCRIPT AND ANY SERVICES PERFORMED
#    BY OR ACCESSED THROUGH THIS SHELL SCRIPT IS AT YOUR SOLE RISK AND
#    THAT THE ENTIRE RISK AS TO SATISFACTORY QUALITY, PERFORMANCE, ACCURACY AND
#    EFFORT IS WITH YOU.
#
# B. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SHELL SCRIPT
#    AND SERVICES ARE PROVIDED "AS IS" AND "AS AVAILABLE", WITH ALL FAULTS AND
#    WITHOUT WARRANTY OF ANY KIND, AND THE AUTHOR OF THIS SHELL SCRIPT'S LICENSORS
#    (COLLECTIVELY REFERRED TO AS "THE AUTHOR" FOR THE PURPOSES OF THIS DISCLAIMER)
#    HEREBY DISCLAIM ALL WARRANTIES AND CONDITIONS WITH RESPECT TO THIS SHELL SCRIPT
#    SOFTWARE AND SERVICES, EITHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT
#    NOT LIMITED TO, THE IMPLIED WARRANTIES AND/OR CONDITIONS OF
#    MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A PARTICULAR PURPOSE,
#    ACCURACY, QUIET ENJOYMENT, AND NON-INFRINGEMENT OF THIRD PARTY RIGHTS.
#
# C. THE AUTHOR DOES NOT WARRANT AGAINST INTERFERENCE WITH YOUR ENJOYMENT OF THE
#    THE AUTHOR's SOFTWARE AND SERVICES, THAT THE FUNCTIONS CONTAINED IN, OR
#    SERVICES PERFORMED OR PROVIDED BY, THIS SHELL SCRIPT WILL MEET YOUR
#    REQUIREMENTS, THAT THE OPERATION OF THIS SHELL SCRIPT OR SERVICES WILL
#    BE UNINTERRUPTED OR ERROR-FREE, THAT ANY SERVICES WILL CONTINUE TO BE MADE
#    AVAILABLE, THAT THIS SHELL SCRIPT OR SERVICES WILL BE COMPATIBLE OR
#    WORK WITH ANY THIRD PARTY SOFTWARE, APPLICATIONS OR THIRD PARTY SERVICES,
#    OR THAT DEFECTS IN THIS SHELL SCRIPT OR SERVICES WILL BE CORRECTED.
#    INSTALLATION OF THIS THE AUTHOR SOFTWARE MAY AFFECT THE USABILITY OF THIRD
#    PARTY SOFTWARE, APPLICATIONS OR THIRD PARTY SERVICES.
#
# D. YOU FURTHER ACKNOWLEDGE THAT THIS SHELL SCRIPT AND SERVICES ARE NOT
#    INTENDED OR SUITABLE FOR USE IN SITUATIONS OR ENVIRONMENTS WHERE THE FAILURE
#    OR TIME DELAYS OF, OR ERRORS OR INACCURACIES IN, THE CONTENT, DATA OR
#    INFORMATION PROVIDED BY THIS SHELL SCRIPT OR SERVICES COULD LEAD TO
#    DEATH, PERSONAL INJURY, OR SEVERE PHYSICAL OR ENVIRONMENTAL DAMAGE,
#    INCLUDING WITHOUT LIMITATION THE OPERATION OF NUCLEAR FACILITIES, AIRCRAFT
#    NAVIGATION OR COMMUNICATION SYSTEMS, AIR TRAFFIC CONTROL, LIFE SUPPORT OR
#    WEAPONS SYSTEMS.
#
# E. NO ORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY THE AUTHOR
#    SHALL CREATE A WARRANTY. SHOULD THIS SHELL SCRIPT OR SERVICES PROVE DEFECTIVE,
#    YOU ASSUME THE ENTIRE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
#
#    Limitation of Liability.
# F. TO THE EXTENT NOT PROHIBITED BY APPLICABLE LAW, IN NO EVENT SHALL THE AUTHOR
#    BE LIABLE FOR PERSONAL INJURY, OR ANY INCIDENTAL, SPECIAL, INDIRECT OR
#    CONSEQUENTIAL DAMAGES WHATSOEVER, INCLUDING, WITHOUT LIMITATION, DAMAGES
#    FOR LOSS OF PROFITS, CORRUPTION OR LOSS OF DATA, FAILURE TO TRANSMIT OR
#    RECEIVE ANY DATA OR INFORMATION, BUSINESS INTERRUPTION OR ANY OTHER
#    COMMERCIAL DAMAGES OR LOSSES, ARISING OUT OF OR RELATED TO YOUR USE OR
#    INABILITY TO USE THIS SHELL SCRIPT OR SERVICES OR ANY THIRD PARTY
#    SOFTWARE OR APPLICATIONS IN CONJUNCTION WITH THIS SHELL SCRIPT OR
#    SERVICES, HOWEVER CAUSED, REGARDLESS OF THE THEORY OF LIABILITY (CONTRACT,
#    TORT OR OTHERWISE) AND EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE
#    POSSIBILITY OF SUCH DAMAGES. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION
#    OR LIMITATION OF LIABILITY FOR PERSONAL INJURY, OR OF INCIDENTAL OR
#    CONSEQUENTIAL DAMAGES, SO THIS LIMITATION MAY NOT APPLY TO YOU. In no event
#    shall THE AUTHOR's total liability to you for all damages (other than as may
#    be required by applicable law in cases involving personal injury) exceed
#    the amount of five dollars ($5.00). The foregoing limitations will apply
#    even if the above stated remedy fails of its essential purpose.
################################################################################

declare -ir MINPARAMS=0;
declare -i IS_SMUDGE_MODE=0;
declare -i IS_CLEAN_MODE=0;
declare -i IS_VERBOSE_MODE=0;
declare -ir MYVERSION=20250610;
declare GIT_FILTER_TOOL_DATA_SKIP
GIT_FILTER_TOOL_DATA_SKIP=`git config --bool --default false --get 'filter.data.skip'`;
# Can force skip this filter by setting the git-config option 'filter.data.skip' like so:
# git config --bool --set 'filter.data.skip' true

_GIT_TOOL_BUFFER="${TMPDIR}"/"git_tool_buffer_${MYVERSION}_${RANDOM}_${RANDOM}_${RANDOM}.tmp" ;
LOCK_FILE="${TMPDIR:-/tmp}/org.git.tool-script.lock" ;
EXIT_CODE=1

function cleanup() {
	# shellcheck disable=SC2317
	unset IS_SMUDGE_MODE || : ;
	# shellcheck disable=SC2317
	unset IS_CLEAN_MODE || : ;
	# shellcheck disable=SC2317
	unset IS_VERBOSE_MODE || : ;
	# shellcheck disable=SC2317
	unset GIT_FILTER_TOOL_DATA_SKIP || : ;
	# shellcheck disable=SC2317
	rm -f "${_GIT_TOOL_BUFFER}" 2>/dev/null || : ;
	# shellcheck disable=SC2317
	rm -f "${LOCK_FILE}" 2>/dev/null || : ;
	unset _GIT_TOOL_BUFFER 2>/dev/null || : ;
	# shellcheck disable=SC2317
	wait ;
	unset LOCK_FILE 2>/dev/null || : ;
	# shellcheck disable=SC2317
	hash -d shlock 2>/dev/null > /dev/null || : ;
}

export -f cleanup ;

function handle_signals() {
	if shlock -f "${LOCK_FILE}" -p $$ ; then
		EXIT_CODE=0
		trap 'cleanup 2>/dev/null || rm -f "${LOCK_FILE}" 2>/dev/null > /dev/null || true ; wait ; exit 129 ;' SIGHUP || EXIT_CODE=129
		trap 'cleanup 2>/dev/null || rm -f "${LOCK_FILE}" 2>/dev/null > /dev/null || true ; wait ; exit 143 ;' SIGTERM || EXIT_CODE=143
		trap 'cleanup 2>/dev/null || rm -f "${LOCK_FILE}" 2>/dev/null > /dev/null || true ; wait ; exit 131 ;' SIGQUIT || EXIT_CODE=131
		# SC2173 - https://github.com/koalaman/shellcheck/wiki/SC2173
		#trap 'cleanup 2>/dev/null || rm -f "${LOCK_FILE}" 2>/dev/null > /dev/null || true ; wait ; exit 1 ;' SIGSTOP || EXIT_CODE=7
		trap 'cleanup 2>/dev/null || rm -f "${LOCK_FILE}" 2>/dev/null > /dev/null || true ; wait ; exit 130 ;' SIGINT || EXIT_CODE=130
		trap 'cleanup 2>/dev/null || rm -f "${LOCK_FILE}" 2>/dev/null > /dev/null || true || true ; wait ; exit 137 ;' SIGABRT || EXIT_CODE=137
		trap 'cleanup 2>/dev/null || rm -f "${LOCK_FILE}" 2>/dev/null > /dev/null || true ; wait ; exit ${EXIT_CODE} ;' EXIT || EXIT_CODE=1
	else
		# shellcheck disable=SC2046
		printf "\t%s\n" "Git-Filter-Data Script already in progress by "$(head "${LOCK_FILE}") >&2 ;
		exit 126 ;
	fi
}

handle_signals

if [[ $# -gt "$MINPARAMS" ]] ; then
while [ $# -gt $MINPARAMS ]; do  # Until you run out of parameters . . .

case "$1" in
  -s|--in|--smudge) IS_SMUDGE_MODE=1 ;;
  -c|--out|--clean) IS_CLEAN_MODE=1 ;;
  -v|--verbose) IS_VERBOSE_MODE=1 ;;
  -V|--version) printf "%s\n" "${MYVERSION}" ; exit $(printf "%d\n" $(("${MYVERSION}" % 256))) ;;
  -*) printf "%s\n" "Error: \"${1}\" Argument Unrecognized!" 1>&2 ; exit 2 ;;
esac
shift  # Check next set of parameters.
done
fi

# before doing anything buff the data
{ cat </dev/stdin >"${_GIT_TOOL_BUFFER}" 2>/dev/null || EXIT_CODE=65 ;} ; wait ;

# shellcheck disable=SC2086
if [[ "${GIT_FILTER_TOOL_DATA_SKIP}" == "true" ]] ; then
	cat <"${_GIT_TOOL_BUFFER}" ;
	EXIT_CODE=0 ; # actually skipped
else
	# shellcheck disable=SC2086
	if [[ ( $IS_SMUDGE_MODE -eq 1 ) ]]; then
		# first check if we need to smudge at all
		if [[ ( $(file -b --mime "${_GIT_TOOL_BUFFER}" | grep -coF "text/plain" ) -lt 1 ) ]] ; then
			IS_SMUDGE_MODE=0 ;
			EXIT_CODE=64 ;
		fi
		# else the file is ok to try and smudge
	fi
	# shellcheck disable=SC2086
	if [[ ( $IS_CLEAN_MODE -eq 1 ) ]]; then
		# first check if we need to clean at all
		if [[ ( $(file -b --mime "${_GIT_TOOL_BUFFER}" | grep -coF "text/plain" ) -ge 1 ) ]] ; then
			IS_CLEAN_MODE=0 ;
			EXIT_CODE=64 ;
		fi
		# else the file is not plain text and is ok to try and clean
	fi
fi
# shellcheck disable=SC2086
if [[ ( $IS_CLEAN_MODE -eq 1 ) ]] ; then
	cat <"${_GIT_TOOL_BUFFER}" | xxd -ps ;
	EXIT_CODE=$? ;
elif [[ ( $IS_SMUDGE_MODE -eq 1 ) ]] ; then
	cat <"${_GIT_TOOL_BUFFER}" | xxd -ps -r ;
	EXIT_CODE=$? ;
else
	cat <"${_GIT_TOOL_BUFFER}" ;
fi

#GIT_FILTER_TOOL_DATA_OPT=`git config --bool --default true --get 'filter.data.option'`
# always clean up
cleanup || : ; wait ;
# shellcheck disable=SC2086
exit ${EXIT_CODE:-1};
